{"ast":null,"code":"import _regeneratorRuntime from \"/Users/carnspi/availability-exercise/web/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/carnspi/availability-exercise/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/carnspi/availability-exercise/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carnspi/availability-exercise/web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carnspi/availability-exercise/web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carnspi/availability-exercise/web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carnspi/availability-exercise/web/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/carnspi/availability-exercise/web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/carnspi/availability-exercise/web/src/App.js\";\nimport React, { Component } from 'react';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleClick = function (id, chosen_time) {\n      if (_this.state.name) {\n        var data = {\n          \"name\": _this.state.name,\n          \"id\": id,\n          \"chosen_time\": chosen_time\n        };\n        fetch(\"http://localhost:4433/selected\", {\n          method: \"POST\",\n          body: JSON.stringify(data)\n        });\n      } else {\n        console.log(\"no name\", _this.state.name);\n      }\n    };\n\n    _this.state = {\n      \"name\": null\n    };\n\n    _this.fetchToday();\n\n    _this.fetchAvailability();\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"fetchToday\",\n    value: function () {\n      var _fetchToday = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(\"http://localhost:4433/today\");\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                json = _context.sent;\n                this.setState({\n                  today: json.today\n                });\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(\"Failed to fetch 'today' data\", _context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n\n      function fetchToday() {\n        return _fetchToday.apply(this, arguments);\n      }\n\n      return fetchToday;\n    }()\n  }, {\n    key: \"fetchAvailability\",\n    value: function () {\n      var _fetchAvailability = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res, json;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return fetch(\"http://localhost:4433/availability\");\n\n              case 3:\n                res = _context2.sent;\n                _context2.next = 6;\n                return res.json();\n\n              case 6:\n                json = _context2.sent;\n                this.setState({\n                  availability: json.availability\n                });\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(\"Failed to fetch 'today' data\", _context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n\n      function fetchAvailability() {\n        return _fetchAvailability.apply(this, arguments);\n      }\n\n      return fetchAvailability;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Book Time with an Advisor\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Name \", this.state.name), this.state.today && React.createElement(\"span\", {\n        id: \"today\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Today is \", this.state.today, \".\"), React.createElement(\"form\", {\n        id: \"name-form\",\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Your Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"name-field\",\n        className: \"form-control\",\n        onChange: function onChange(ev) {\n          return _this2.setState({\n            name: ev.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Available Times\"), React.createElement(\"table\", {\n        className: \"advisors table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Advisor ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Available Times\"))), this.state.availability && React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.availability.map(function (advisor, key) {\n        return React.createElement(\"tr\", {\n          key: advisor.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, advisor.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"list-unstyled\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, advisor.opentimes.map(function (opentime, index) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(\"time\", {\n            dateTime: opentime,\n            className: \"book-time\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, opentime), React.createElement(\"button\", {\n            className: \"book btn-small btn-primary\",\n            onClick: function onClick() {\n              return _this2.handleClick(advisor.id, opentime);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, \"Book\"));\n        }))));\n      }))), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Booked Times\"), React.createElement(\"table\", {\n        className: \"bookings table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Advisor ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Student Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Date/Time\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"36232\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"John Smith\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"time\", {\n        dateTime: \"2019-04-03T10:00:00-04:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"4/3/2019 10:00 am\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/carnspi/availability-exercise/web/src/App.js"],"names":["React","Component","App","props","handleClick","id","chosen_time","state","name","data","fetch","method","body","JSON","stringify","console","log","fetchToday","fetchAvailability","bind","res","json","setState","today","error","availability","ev","target","value","map","advisor","key","opentimes","opentime","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\"name\": null};\n    this.fetchToday();\n    this.fetchAvailability();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async fetchToday() {\n    try {\n      const res = await fetch(\"http://localhost:4433/today\");\n      const json = await res.json();\n      this.setState({today: json.today});\n    } catch (e) {\n      console.error(\"Failed to fetch 'today' data\", e);\n    }\n  }\n\n  async fetchAvailability() {\n    try {\n      const res = await fetch(\"http://localhost:4433/availability\");\n      const json = await res.json();\n      this.setState({availability: json.availability});\n    } catch (e) {\n      console.error(\"Failed to fetch 'today' data\", e);\n    }\n  }\n\n  handleClick = (id, chosen_time) => {\n    if (this.state.name) {\n      const data = {\n        \"name\": this.state.name,\n        \"id\": id,\n        \"chosen_time\": chosen_time\n      }\n      fetch(\"http://localhost:4433/selected\",\n        {\n          method: \"POST\",\n          body:  JSON.stringify(data)\n        }\n      );\n     } else {\n       console.log(\"no name\", this.state.name);\n     }\n   }\n\n  render() {\n\n    return (\n      <div className=\"App container\">\n        <h1>Book Time with an Advisor</h1>\n        <p>Name {this.state.name}</p>\n        {this.state.today && <span id=\"today\">Today is {this.state.today}.</span>}\n\n        <form id=\"name-form\" className=\"col-md-6\">\n          <div className=\"form-group\">\n            <label htmlFor=\"name-field\">Your Name</label>\n            <input type=\"text\" id=\"name-field\" className=\"form-control\"\n              onChange={ev => this.setState({name: ev.target.value})}/>\n          </div>\n        </form>\n\n\n        <h2>Available Times</h2>\n        <table className=\"advisors table\">\n          <thead>\n            <tr>\n              <th>Advisor ID</th>\n              <th>Available Times</th>\n            </tr>\n          </thead>\n          {this.state.availability &&\n            <tbody>\n            {this.state.availability.map((advisor, key) => {\n              return (\n                <tr key={advisor.id}>\n                  <td>{advisor.id}</td>\n                  <td>\n                    <ul className=\"list-unstyled\">\n                      {advisor.opentimes.map((opentime, index) => {\n                        return <li>\n                          <time dateTime={opentime} className=\"book-time\">{opentime}</time>\n                          <button className=\"book btn-small btn-primary\" onClick={() => this.handleClick(advisor.id, opentime)}>Book</button>\n                          </li>\n                      })}\n                    </ul>\n                  </td>\n                </tr>\n              )\n              })\n            }\n            </tbody>\n          }\n        </table>\n\n        <h2>Booked Times</h2>\n        <table className=\"bookings table\">\n          <thead>\n            <tr>\n              <th>Advisor ID</th>\n              <th>Student Name</th>\n              <th>Date/Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>36232</td>\n              <td>John Smith</td>\n              <td>\n                <time dateTime=\"2019-04-03T10:00:00-04:00\">4/3/2019 10:00 am</time>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}